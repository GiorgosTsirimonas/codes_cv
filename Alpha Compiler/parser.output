State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr STAR expr
   17     | expr DIVISION expr
   18     | expr MODULO expr
   19     | expr GREATER expr
   20     | expr GTOE expr
   21     | expr LESS expr
   22     | expr LTOE expr
   23     | expr EQUAL expr
   24     | expr NOT_EQUAL expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term

   28 term: LP expr RP
   29     | MINUS expr
   30     | NOT expr
   31     | PLUS_PLUS lvalue
   32     | lvalue PLUS_PLUS
   33     | MINUS_MINUS lvalue
   34     | lvalue MINUS_MINUS
   35     | primary

   36 $@1: %empty

   37 assignexpr: lvalue $@1 ASSIGN expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LP funcdef RP
   42        | const

   43 lvalue: IDENTIFIER
   44       | LOCALL IDENTIFIER
   45       | COLON_COLON IDENTIFIER
   46       | member

   47 member: lvalue DOT IDENTIFIER
   48       | lvalue LB expr RB
   49       | call DOT IDENTIFIER
   50       | call LB expr RB

   51 call: call LP elist RP
   52     | lvalue callsuffix
   53     | LP funcdef RP LP elist RP

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LP elist RP

   57 methodcall: DOT_DOT IDENTIFIER LP elist RP

   58 elist: expr
   59      | elist COMMA expr
   60      | %empty

   61 objectdef: LB elist RB
   62          | LB indexed RB

   63 indexed: indexedelem indexed_next_expr

   64 indexed_next_expr: COMMA indexedelem indexed_next_expr
   65                  | %empty

   66 indexedelem: LC expr COLON expr RC

   67 stmt_in_block: stmt stmt_in_block
   68              | %empty

   69 $@2: %empty

   70 block: LC $@2 stmt_in_block RC

   71 funcname: IDENTIFIER
   72         | %empty

   73 funcprefix: FUNCTION funcname

   74 $@3: %empty

   75 funcargs: LP $@3 idlist RP

   76 funcbody: block

   77 funcblockstart: %empty

   78 funcblockend: %empty

   79 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend

   80 const: INTCONST
   81      | REALCONST
   82      | STRINGS
   83      | NIL
   84      | TRUES
   85      | FALSES

   86 idlist: IDENTIFIER

   87 $@4: %empty

   88 idlist: idlist COMMA $@4 IDENTIFIER
   89       | %empty

   90 ifstmt: ifpre stmt
   91       | ifpre stmt elsepre stmt

   92 ifpre: IF LP expr RP

   93 elsepre: ELSE

   94 whilestmt: whilestart whilecond loopstmt

   95 whilestart: WHILE

   96 whilecond: LP expr RP

   97 loopstmt: loopstart stmt loopend

   98 loopstart: %empty

   99 loopend: %empty

  100 $@5: %empty

  101 $@6: %empty

  102 $@7: %empty

  103 $@8: %empty

  104 $@9: %empty

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt

  106 $@10: %empty

  107 returnstmt: RETURN $@10 SEMICOLON

  108 $@11: %empty

  109 $@12: %empty

  110 returnstmt: RETURN $@11 expr $@12 SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 92
ELSE (259) 93
WHILE (260) 95
FOR (261) 105
FUNCTION (262) 73
RETURN (263) 107 110
BREAK (264) 8
CONTINUE (265) 9
LOCALL (266) 44
TRUES (267) 84
FALSES (268) 85
NIL (269) 83
LC (270) 66 70
RC (271) 66 70
SEMICOLON (272) 3 8 9 12 105 107 110
COMMA (273) 59 64 88
COLON_COLON (274) 45
COLON (275) 66
STRINGS (276) 82
INTCONST (277) 80
REALCONST (278) 81
IDENTIFIER (279) 43 44 45 47 49 57 71 86 88
ASSIGN (280) 37
OR (281) 26
AND (282) 25
EQUAL (283) 23
NOT_EQUAL (284) 24
GREATER (285) 19
GTOE (286) 20
LESS (287) 21
LTOE (288) 22
PLUS (289) 14
MINUS (290) 15 29
STAR (291) 16
DIVISION (292) 17
MODULO (293) 18
NOT (294) 30
PLUS_PLUS (295) 31 32
MINUS_MINUS (296) 33 34
UMINUS (297)
DOT (298) 47 49
DOT_DOT (299) 57
LB (300) 48 50 61 62
RB (301) 48 50 61 62
LP (302) 28 41 51 53 56 57 75 92 96 105
RP (303) 28 41 51 53 56 57 75 92 96 105


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1 2, on right: 0 1
stmt (51)
    on left: 3 4 5 6 7 8 9 10 11 12, on right: 1 67 90 91 97 105
expr (52)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 37 48 50 58 59
    66 92 96 105 110
term (53)
    on left: 28 29 30 31 32 33 34 35, on right: 27
assignexpr (54)
    on left: 37, on right: 13
$@1 (55)
    on left: 36, on right: 37
primary (56)
    on left: 38 39 40 41 42, on right: 35
lvalue (57)
    on left: 43 44 45 46, on right: 31 32 33 34 37 38 47 48 52
member (58)
    on left: 47 48 49 50, on right: 46
call (59)
    on left: 51 52 53, on right: 39 49 50 51
callsuffix (60)
    on left: 54 55, on right: 52
normcall (61)
    on left: 56, on right: 54
methodcall (62)
    on left: 57, on right: 55
elist (63)
    on left: 58 59 60, on right: 51 53 56 57 59 61 105
objectdef (64)
    on left: 61 62, on right: 40
indexed (65)
    on left: 63, on right: 62
indexed_next_expr (66)
    on left: 64 65, on right: 63 64
indexedelem (67)
    on left: 66, on right: 63 64
stmt_in_block (68)
    on left: 67 68, on right: 67 70
block (69)
    on left: 70, on right: 10 76
$@2 (70)
    on left: 69, on right: 70
funcname (71)
    on left: 71 72, on right: 73
funcprefix (72)
    on left: 73, on right: 79
funcargs (73)
    on left: 75, on right: 79
$@3 (74)
    on left: 74, on right: 75
funcbody (75)
    on left: 76, on right: 79
funcblockstart (76)
    on left: 77, on right: 79
funcblockend (77)
    on left: 78, on right: 79
funcdef (78)
    on left: 79, on right: 11 41 53
const (79)
    on left: 80 81 82 83 84 85, on right: 42
idlist (80)
    on left: 86 88 89, on right: 75 88
$@4 (81)
    on left: 87, on right: 88
ifstmt (82)
    on left: 90 91, on right: 4
ifpre (83)
    on left: 92, on right: 90 91
elsepre (84)
    on left: 93, on right: 91
whilestmt (85)
    on left: 94, on right: 5
whilestart (86)
    on left: 95, on right: 94
whilecond (87)
    on left: 96, on right: 94
loopstmt (88)
    on left: 97, on right: 94
loopstart (89)
    on left: 98, on right: 97
loopend (90)
    on left: 99, on right: 97
forstmt (91)
    on left: 105, on right: 6
$@5 (92)
    on left: 100, on right: 105
$@6 (93)
    on left: 101, on right: 105
$@7 (94)
    on left: 102, on right: 105
$@8 (95)
    on left: 103, on right: 105
$@9 (96)
    on left: 104, on right: 105
returnstmt (97)
    on left: 107 110, on right: 7
$@10 (98)
    on left: 106, on right: 107
$@11 (99)
    on left: 108, on right: 110
$@12 (100)
    on left: 109, on right: 110


State 0

    0 $accept: . program $end

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    ifpre       go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 1

   92 ifpre: IF . LP expr RP

    LP  shift, and go to state 45


State 2

   95 whilestart: WHILE .

    $default  reduce using rule 95 (whilestart)


State 3

  105 forstmt: FOR . $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt

    $default  reduce using rule 100 ($@5)

    $@5  go to state 46


State 4

   73 funcprefix: FUNCTION . funcname

    IDENTIFIER  shift, and go to state 47

    $default  reduce using rule 72 (funcname)

    funcname  go to state 48


State 5

  107 returnstmt: RETURN . $@10 SEMICOLON
  110           | RETURN . $@11 expr $@12 SEMICOLON

    SEMICOLON  reduce using rule 106 ($@10)
    $default   reduce using rule 108 ($@11)

    $@10  go to state 49
    $@11  go to state 50


State 6

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 7

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 8

   44 lvalue: LOCALL . IDENTIFIER

    IDENTIFIER  shift, and go to state 53


State 9

   84 const: TRUES .

    $default  reduce using rule 84 (const)


State 10

   85 const: FALSES .

    $default  reduce using rule 85 (const)


State 11

   83 const: NIL .

    $default  reduce using rule 83 (const)


State 12

   70 block: LC . $@2 stmt_in_block RC

    $default  reduce using rule 69 ($@2)

    $@2  go to state 54


State 13

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 14

   45 lvalue: COLON_COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 55


State 15

   82 const: STRINGS .

    $default  reduce using rule 82 (const)


State 16

   80 const: INTCONST .

    $default  reduce using rule 80 (const)


State 17

   81 const: REALCONST .

    $default  reduce using rule 81 (const)


State 18

   43 lvalue: IDENTIFIER .

    $default  reduce using rule 43 (lvalue)


State 19

   29 term: MINUS . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 56
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 20

   30 term: NOT . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 57
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 21

   31 term: PLUS_PLUS . lvalue

    LOCALL       shift, and go to state 8
    COLON_COLON  shift, and go to state 14
    IDENTIFIER   shift, and go to state 18
    LP           shift, and go to state 58

    lvalue  go to state 59
    member  go to state 32
    call    go to state 60


State 22

   33 term: MINUS_MINUS . lvalue

    LOCALL       shift, and go to state 8
    COLON_COLON  shift, and go to state 14
    IDENTIFIER   shift, and go to state 18
    LP           shift, and go to state 58

    lvalue  go to state 61
    member  go to state 32
    call    go to state 60


State 23

   61 objectdef: LB . elist RB
   62          | LB . indexed RB

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 62
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr         go to state 63
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 64
    objectdef    go to state 34
    indexed      go to state 65
    indexedelem  go to state 66
    const        go to state 38


State 24

   28 term: LP . expr RP
   41 primary: LP . funcdef RP
   53 call: LP . funcdef RP LP elist RP

    FUNCTION     shift, and go to state 4
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 67
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcprefix  go to state 36
    funcdef     go to state 68
    const       go to state 38


State 25

    0 $accept: program . $end

    $end  shift, and go to state 69


State 26

    1 program: stmt . program

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 70
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    ifpre       go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    SEMICOLON  shift, and go to state 71
    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   32 term: lvalue . PLUS_PLUS
   34     | lvalue . MINUS_MINUS
   37 assignexpr: lvalue . $@1 ASSIGN expr
   38 primary: lvalue .
   47 member: lvalue . DOT IDENTIFIER
   48       | lvalue . LB expr RB
   52 call: lvalue . callsuffix

    PLUS_PLUS    shift, and go to state 85
    MINUS_MINUS  shift, and go to state 86
    DOT          shift, and go to state 87
    DOT_DOT      shift, and go to state 88
    LB           shift, and go to state 89
    LP           shift, and go to state 90

    ASSIGN    reduce using rule 36 ($@1)
    $default  reduce using rule 38 (primary)

    $@1         go to state 91
    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 32

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 33

   39 primary: call .
   49 member: call . DOT IDENTIFIER
   50       | call . LB expr RB
   51 call: call . LP elist RP

    DOT  shift, and go to state 95
    LB   shift, and go to state 96
    LP   shift, and go to state 97

    $default  reduce using rule 39 (primary)


State 34

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   79 funcdef: funcprefix . funcargs funcblockstart funcbody funcblockend

    LP  shift, and go to state 98

    funcargs  go to state 99


State 37

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 38

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 39

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 40

   90 ifstmt: ifpre . stmt
   91       | ifpre . stmt elsepre stmt

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    stmt        go to state 100
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    ifpre       go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 41

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 42

   94 whilestmt: whilestart . whilecond loopstmt

    LP  shift, and go to state 101

    whilecond  go to state 102


State 43

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 44

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 45

   92 ifpre: IF LP . expr RP

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 103
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 46

  105 forstmt: FOR $@5 . LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt

    LP  shift, and go to state 104


State 47

   71 funcname: IDENTIFIER .

    $default  reduce using rule 71 (funcname)


State 48

   73 funcprefix: FUNCTION funcname .

    $default  reduce using rule 73 (funcprefix)


State 49

  107 returnstmt: RETURN $@10 . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 50

  110 returnstmt: RETURN $@11 . expr $@12 SEMICOLON

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 106
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 51

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 52

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 53

   44 lvalue: LOCALL IDENTIFIER .

    $default  reduce using rule 44 (lvalue)


State 54

   70 block: LC $@2 . stmt_in_block RC

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 68 (stmt_in_block)

    stmt           go to state 107
    expr           go to state 27
    term           go to state 28
    assignexpr     go to state 29
    primary        go to state 30
    lvalue         go to state 31
    member         go to state 32
    call           go to state 33
    objectdef      go to state 34
    stmt_in_block  go to state 108
    block          go to state 35
    funcprefix     go to state 36
    funcdef        go to state 37
    const          go to state 38
    ifstmt         go to state 39
    ifpre          go to state 40
    whilestmt      go to state 41
    whilestart     go to state 42
    forstmt        go to state 43
    returnstmt     go to state 44


State 55

   45 lvalue: COLON_COLON IDENTIFIER .

    $default  reduce using rule 45 (lvalue)


State 56

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   29 term: MINUS expr .

    $default  reduce using rule 29 (term)


State 57

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: NOT expr .

    $default  reduce using rule 30 (term)


State 58

   53 call: LP . funcdef RP LP elist RP

    FUNCTION  shift, and go to state 4

    funcprefix  go to state 36
    funcdef     go to state 109


State 59

   31 term: PLUS_PLUS lvalue .
   47 member: lvalue . DOT IDENTIFIER
   48       | lvalue . LB expr RB
   52 call: lvalue . callsuffix

    DOT      shift, and go to state 87
    DOT_DOT  shift, and go to state 88
    LB       shift, and go to state 89
    LP       shift, and go to state 90

    $default  reduce using rule 31 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 60

   49 member: call . DOT IDENTIFIER
   50       | call . LB expr RB
   51 call: call . LP elist RP

    DOT  shift, and go to state 95
    LB   shift, and go to state 96
    LP   shift, and go to state 97


State 61

   33 term: MINUS_MINUS lvalue .
   47 member: lvalue . DOT IDENTIFIER
   48       | lvalue . LB expr RB
   52 call: lvalue . callsuffix

    DOT      shift, and go to state 87
    DOT_DOT  shift, and go to state 88
    LB       shift, and go to state 89
    LP       shift, and go to state 90

    $default  reduce using rule 33 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 62

   66 indexedelem: LC . expr COLON expr RC

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 110
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 63

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   58 elist: expr .

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84

    $default  reduce using rule 58 (elist)


State 64

   59 elist: elist . COMMA expr
   61 objectdef: LB elist . RB

    COMMA  shift, and go to state 111
    RB     shift, and go to state 112


State 65

   62 objectdef: LB indexed . RB

    RB  shift, and go to state 113


State 66

   63 indexed: indexedelem . indexed_next_expr

    COMMA  shift, and go to state 114

    $default  reduce using rule 65 (indexed_next_expr)

    indexed_next_expr  go to state 115


State 67

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   28 term: LP expr . RP

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84
    RP         shift, and go to state 116


State 68

   41 primary: LP funcdef . RP
   53 call: LP funcdef . RP LP elist RP

    RP  shift, and go to state 117


State 69

    0 $accept: program $end .

    $default  accept


State 70

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 71

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 72

   26 expr: expr OR . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 73

   25 expr: expr AND . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 74

   23 expr: expr EQUAL . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 75

   24 expr: expr NOT_EQUAL . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 76

   19 expr: expr GREATER . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 77

   20 expr: expr GTOE . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 78

   21 expr: expr LESS . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 79

   22 expr: expr LTOE . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 80

   14 expr: expr PLUS . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 81

   15 expr: expr MINUS . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 82

   16 expr: expr STAR . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 83

   17 expr: expr DIVISION . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 84

   18 expr: expr MODULO . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 85

   32 term: lvalue PLUS_PLUS .

    $default  reduce using rule 32 (term)


State 86

   34 term: lvalue MINUS_MINUS .

    $default  reduce using rule 34 (term)


State 87

   47 member: lvalue DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


State 88

   57 methodcall: DOT_DOT . IDENTIFIER LP elist RP

    IDENTIFIER  shift, and go to state 132


State 89

   48 member: lvalue LB . expr RB

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 90

   56 normcall: LP . elist RP

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 38


State 91

   37 assignexpr: lvalue $@1 . ASSIGN expr

    ASSIGN  shift, and go to state 135


State 92

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 93

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 94

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 95

   49 member: call DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 136


State 96

   50 member: call LB . expr RB

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 137
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 97

   51 call: call LP . elist RP

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 138
    objectdef   go to state 34
    const       go to state 38


State 98

   75 funcargs: LP . $@3 idlist RP

    $default  reduce using rule 74 ($@3)

    $@3  go to state 139


State 99

   79 funcdef: funcprefix funcargs . funcblockstart funcbody funcblockend

    $default  reduce using rule 77 (funcblockstart)

    funcblockstart  go to state 140


State 100

   90 ifstmt: ifpre stmt .
   91       | ifpre stmt . elsepre stmt

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 90 (ifstmt)]
    $default  reduce using rule 90 (ifstmt)

    elsepre  go to state 142


State 101

   96 whilecond: LP . expr RP

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 143
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 102

   94 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 98 (loopstart)

    loopstmt   go to state 144
    loopstart  go to state 145


State 103

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   92 ifpre: IF LP expr . RP

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84
    RP         shift, and go to state 146


State 104

  105 forstmt: FOR $@5 LP . $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt

    $default  reduce using rule 101 ($@6)

    $@6  go to state 147


State 105

  107 returnstmt: RETURN $@10 SEMICOLON .

    $default  reduce using rule 107 (returnstmt)


State 106

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
  110 returnstmt: RETURN $@11 expr . $@12 SEMICOLON

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84

    $default  reduce using rule 109 ($@12)

    $@12  go to state 148


State 107

   67 stmt_in_block: stmt . stmt_in_block

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 68 (stmt_in_block)

    stmt           go to state 107
    expr           go to state 27
    term           go to state 28
    assignexpr     go to state 29
    primary        go to state 30
    lvalue         go to state 31
    member         go to state 32
    call           go to state 33
    objectdef      go to state 34
    stmt_in_block  go to state 149
    block          go to state 35
    funcprefix     go to state 36
    funcdef        go to state 37
    const          go to state 38
    ifstmt         go to state 39
    ifpre          go to state 40
    whilestmt      go to state 41
    whilestart     go to state 42
    forstmt        go to state 43
    returnstmt     go to state 44


State 108

   70 block: LC $@2 stmt_in_block . RC

    RC  shift, and go to state 150


State 109

   53 call: LP funcdef . RP LP elist RP

    RP  shift, and go to state 151


State 110

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: LC expr . COLON expr RC

    COLON      shift, and go to state 152
    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84


State 111

   59 elist: elist COMMA . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 153
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 112

   61 objectdef: LB elist RB .

    $default  reduce using rule 61 (objectdef)


State 113

   62 objectdef: LB indexed RB .

    $default  reduce using rule 62 (objectdef)


State 114

   64 indexed_next_expr: COMMA . indexedelem indexed_next_expr

    LC  shift, and go to state 62

    indexedelem  go to state 154


State 115

   63 indexed: indexedelem indexed_next_expr .

    $default  reduce using rule 63 (indexed)


State 116

   28 term: LP expr RP .

    $default  reduce using rule 28 (term)


State 117

   41 primary: LP funcdef RP .
   53 call: LP funcdef RP . LP elist RP

    LP  shift, and go to state 155

    $default  reduce using rule 41 (primary)


State 118

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84

    $default  reduce using rule 26 (expr)


State 119

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84

    $default  reduce using rule 25 (expr)


State 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    GREATER   shift, and go to state 76
    GTOE      shift, and go to state 77
    LESS      shift, and go to state 78
    LTOE      shift, and go to state 79
    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   24     | expr NOT_EQUAL expr .
   25     | expr . AND expr
   26     | expr . OR expr

    GREATER   shift, and go to state 76
    GTOE      shift, and go to state 77
    LESS      shift, and go to state 78
    LTOE      shift, and go to state 79
    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 122

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   19     | expr GREATER expr .
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    GREATER  error (nonassociative)
    GTOE     error (nonassociative)
    LESS     error (nonassociative)
    LTOE     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   20     | expr GTOE expr .
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    GREATER  error (nonassociative)
    GTOE     error (nonassociative)
    LESS     error (nonassociative)
    LTOE     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    GREATER  error (nonassociative)
    GTOE     error (nonassociative)
    LESS     error (nonassociative)
    LTOE     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 125

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   22     | expr LTOE expr .
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS      shift, and go to state 80
    MINUS     shift, and go to state 81
    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    GREATER  error (nonassociative)
    GTOE     error (nonassociative)
    LESS     error (nonassociative)
    LTOE     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 126

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    $default  reduce using rule 14 (expr)


State 127

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    STAR      shift, and go to state 82
    DIVISION  shift, and go to state 83
    MODULO    shift, and go to state 84

    $default  reduce using rule 15 (expr)


State 128

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   16     | expr STAR expr .
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 129

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   17     | expr DIVISION expr .
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 130

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   18     | expr MODULO expr .
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 131

   47 member: lvalue DOT IDENTIFIER .

    $default  reduce using rule 47 (member)


State 132

   57 methodcall: DOT_DOT IDENTIFIER . LP elist RP

    LP  shift, and go to state 156


State 133

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   48 member: lvalue LB expr . RB

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84
    RB         shift, and go to state 157


State 134

   56 normcall: LP elist . RP
   59 elist: elist . COMMA expr

    COMMA  shift, and go to state 111
    RP     shift, and go to state 158


State 135

   37 assignexpr: lvalue $@1 ASSIGN . expr

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 159
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 136

   49 member: call DOT IDENTIFIER .

    $default  reduce using rule 49 (member)


State 137

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   50 member: call LB expr . RB

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84
    RB         shift, and go to state 160


State 138

   51 call: call LP elist . RP
   59 elist: elist . COMMA expr

    COMMA  shift, and go to state 111
    RP     shift, and go to state 161


State 139

   75 funcargs: LP $@3 . idlist RP

    IDENTIFIER  shift, and go to state 162

    $default  reduce using rule 89 (idlist)

    idlist  go to state 163


State 140

   79 funcdef: funcprefix funcargs funcblockstart . funcbody funcblockend

    LC  shift, and go to state 12

    block     go to state 164
    funcbody  go to state 165


State 141

   93 elsepre: ELSE .

    $default  reduce using rule 93 (elsepre)


State 142

   91 ifstmt: ifpre stmt elsepre . stmt

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    stmt        go to state 166
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    ifpre       go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 143

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   96 whilecond: LP expr . RP

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84
    RP         shift, and go to state 167


State 144

   94 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 94 (whilestmt)


State 145

   97 loopstmt: loopstart . stmt loopend

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    stmt        go to state 168
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    ifpre       go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 146

   92 ifpre: IF LP expr RP .

    $default  reduce using rule 92 (ifpre)


State 147

  105 forstmt: FOR $@5 LP $@6 . elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 169
    objectdef   go to state 34
    const       go to state 38


State 148

  110 returnstmt: RETURN $@11 expr $@12 . SEMICOLON

    SEMICOLON  shift, and go to state 170


State 149

   67 stmt_in_block: stmt stmt_in_block .

    $default  reduce using rule 67 (stmt_in_block)


State 150

   70 block: LC $@2 stmt_in_block RC .

    $default  reduce using rule 70 (block)


State 151

   53 call: LP funcdef RP . LP elist RP

    LP  shift, and go to state 155


State 152

   66 indexedelem: LC expr COLON . expr RC

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 171
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 153

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   59 elist: elist COMMA expr .

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84

    $default  reduce using rule 59 (elist)


State 154

   64 indexed_next_expr: COMMA indexedelem . indexed_next_expr

    COMMA  shift, and go to state 114

    $default  reduce using rule 65 (indexed_next_expr)

    indexed_next_expr  go to state 172


State 155

   53 call: LP funcdef RP LP . elist RP

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 173
    objectdef   go to state 34
    const       go to state 38


State 156

   57 methodcall: DOT_DOT IDENTIFIER LP . elist RP

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 174
    objectdef   go to state 34
    const       go to state 38


State 157

   48 member: lvalue LB expr RB .

    $default  reduce using rule 48 (member)


State 158

   56 normcall: LP elist RP .

    $default  reduce using rule 56 (normcall)


State 159

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   37 assignexpr: lvalue $@1 ASSIGN expr .

    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84

    $default  reduce using rule 37 (assignexpr)


State 160

   50 member: call LB expr RB .

    $default  reduce using rule 50 (member)


State 161

   51 call: call LP elist RP .

    $default  reduce using rule 51 (call)


State 162

   86 idlist: IDENTIFIER .

    $default  reduce using rule 86 (idlist)


State 163

   75 funcargs: LP $@3 idlist . RP
   88 idlist: idlist . COMMA $@4 IDENTIFIER

    COMMA  shift, and go to state 175
    RP     shift, and go to state 176


State 164

   76 funcbody: block .

    $default  reduce using rule 76 (funcbody)


State 165

   79 funcdef: funcprefix funcargs funcblockstart funcbody . funcblockend

    $default  reduce using rule 78 (funcblockend)

    funcblockend  go to state 177


State 166

   91 ifstmt: ifpre stmt elsepre stmt .

    $default  reduce using rule 91 (ifstmt)


State 167

   96 whilecond: LP expr RP .

    $default  reduce using rule 96 (whilecond)


State 168

   97 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 99 (loopend)

    loopend  go to state 178


State 169

   59 elist: elist . COMMA expr
  105 forstmt: FOR $@5 LP $@6 elist . SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt

    SEMICOLON  shift, and go to state 179
    COMMA      shift, and go to state 111


State 170

  110 returnstmt: RETURN $@11 expr $@12 SEMICOLON .

    $default  reduce using rule 110 (returnstmt)


State 171

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: LC expr COLON expr . RC

    RC         shift, and go to state 180
    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84


State 172

   64 indexed_next_expr: COMMA indexedelem indexed_next_expr .

    $default  reduce using rule 64 (indexed_next_expr)


State 173

   53 call: LP funcdef RP LP elist . RP
   59 elist: elist . COMMA expr

    COMMA  shift, and go to state 111
    RP     shift, and go to state 181


State 174

   57 methodcall: DOT_DOT IDENTIFIER LP elist . RP
   59 elist: elist . COMMA expr

    COMMA  shift, and go to state 111
    RP     shift, and go to state 182


State 175

   88 idlist: idlist COMMA . $@4 IDENTIFIER

    $default  reduce using rule 87 ($@4)

    $@4  go to state 183


State 176

   75 funcargs: LP $@3 idlist RP .

    $default  reduce using rule 75 (funcargs)


State 177

   79 funcdef: funcprefix funcargs funcblockstart funcbody funcblockend .

    $default  reduce using rule 79 (funcdef)


State 178

   97 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 97 (loopstmt)


State 179

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON . $@7 expr SEMICOLON $@8 elist RP $@9 stmt

    $default  reduce using rule 102 ($@7)

    $@7  go to state 184


State 180

   66 indexedelem: LC expr COLON expr RC .

    $default  reduce using rule 66 (indexedelem)


State 181

   53 call: LP funcdef RP LP elist RP .

    $default  reduce using rule 53 (call)


State 182

   57 methodcall: DOT_DOT IDENTIFIER LP elist RP .

    $default  reduce using rule 57 (methodcall)


State 183

   88 idlist: idlist COMMA $@4 . IDENTIFIER

    IDENTIFIER  shift, and go to state 185


State 184

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 . expr SEMICOLON $@8 elist RP $@9 stmt

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    expr        go to state 186
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 185

   88 idlist: idlist COMMA $@4 IDENTIFIER .

    $default  reduce using rule 88 (idlist)


State 186

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . STAR expr
   17     | expr . DIVISION expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GTOE expr
   21     | expr . LESS expr
   22     | expr . LTOE expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr . SEMICOLON $@8 elist RP $@9 stmt

    SEMICOLON  shift, and go to state 187
    OR         shift, and go to state 72
    AND        shift, and go to state 73
    EQUAL      shift, and go to state 74
    NOT_EQUAL  shift, and go to state 75
    GREATER    shift, and go to state 76
    GTOE       shift, and go to state 77
    LESS       shift, and go to state 78
    LTOE       shift, and go to state 79
    PLUS       shift, and go to state 80
    MINUS      shift, and go to state 81
    STAR       shift, and go to state 82
    DIVISION   shift, and go to state 83
    MODULO     shift, and go to state 84


State 187

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON . $@8 elist RP $@9 stmt

    $default  reduce using rule 103 ($@8)

    $@8  go to state 188


State 188

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 . elist RP $@9 stmt

    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    $default  reduce using rule 60 (elist)

    expr        go to state 63
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 189
    objectdef   go to state 34
    const       go to state 38


State 189

   59 elist: elist . COMMA expr
  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist . RP $@9 stmt

    COMMA  shift, and go to state 111
    RP     shift, and go to state 190


State 190

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP . $@9 stmt

    $default  reduce using rule 104 ($@9)

    $@9  go to state 191


State 191

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 . stmt

    IF           shift, and go to state 1
    WHILE        shift, and go to state 2
    FOR          shift, and go to state 3
    FUNCTION     shift, and go to state 4
    RETURN       shift, and go to state 5
    BREAK        shift, and go to state 6
    CONTINUE     shift, and go to state 7
    LOCALL       shift, and go to state 8
    TRUES        shift, and go to state 9
    FALSES       shift, and go to state 10
    NIL          shift, and go to state 11
    LC           shift, and go to state 12
    SEMICOLON    shift, and go to state 13
    COLON_COLON  shift, and go to state 14
    STRINGS      shift, and go to state 15
    INTCONST     shift, and go to state 16
    REALCONST    shift, and go to state 17
    IDENTIFIER   shift, and go to state 18
    MINUS        shift, and go to state 19
    NOT          shift, and go to state 20
    PLUS_PLUS    shift, and go to state 21
    MINUS_MINUS  shift, and go to state 22
    LB           shift, and go to state 23
    LP           shift, and go to state 24

    stmt        go to state 192
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcprefix  go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    ifpre       go to state 40
    whilestmt   go to state 41
    whilestart  go to state 42
    forstmt     go to state 43
    returnstmt  go to state 44


State 192

  105 forstmt: FOR $@5 LP $@6 elist SEMICOLON $@7 expr SEMICOLON $@8 elist RP $@9 stmt .

    $default  reduce using rule 105 (forstmt)
